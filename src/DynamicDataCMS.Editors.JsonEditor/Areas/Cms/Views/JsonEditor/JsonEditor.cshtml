@model DynamicDataCMS.Editors.JsonEditor.Models.EditViewModel
@{
    if (Model == null)
    {
        return;
    }
    ViewData["Title"] = Model.MenuCmsItem.Name;
}

@section ScriptsHead
{
    <script src="https://cdn.jsdelivr.net/npm/@@json-editor/json-editor@2.5.3/dist/jsoneditor.min.js"></script>
    <script src="~/_content/DynamicDataCMS.Editors.JsonEditor/editor_fixes.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dompurify@@latest/dist/purify.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@trevoreyre/autocomplete-js@latest/dist/autocomplete.min.js"></script>
}

@section Scripts
{
    <script type="text/javascript">
        var searchApiUrl = '@Html.Raw(Url.Action("Search", "Api", new { Area = "cms" }))';
        var fileUploadUrl = '@Html.Raw(Url.Action("Upload", "File", new { cmsType = Model.CmsType, id = Model.Id, lang = Model.Language }))';
        var saveUrl = '@Html.Raw(Url.Action("Save", "Api", new { cmsType = Model.CmsType, id = Model.Id, lang = Model.Language, treeItemSchemaKey = Model.TreeItemSchemaKey, treeNodeId = Model.TreeNodeId }))';
        var loadUrl = '@Html.Raw(Url.Action("Load", "Api", new { cmsType = Model.CmsType, id = Model.Id, lang = Model.Language }))';
        var schemaJson = @Html.Raw(Model.SchemaLocation.Schema?.ToString());
        var setData = @((Model.Data != null).ToString().ToLowerInvariant());
        var data = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Data));
    </script>
    <script src="~/_content/DynamicDataCMS.Editors.JsonEditor/editor.js"></script>

    @if (Model.CmsConfiguration.EditScripts?.Any() ?? false)
    {
        @foreach (var scriptUrl in Model.CmsConfiguration.EditScripts!)
        {
            <script src="@scriptUrl"></script>
        }
    }
}
<div>
    <h1 class="display-4">@Model.MenuCmsItem.Name</h1>

    @if (Model.CmsConfiguration?.Languages?.Any() ?? false)
    {
        <a class="badge badge-secondary" href="@Url.Action("Edit", "Edit", new { lang = "", id = Model.Id, cmsType = Model.CmsType, treeItemSchemaKey = Model.TreeItemSchemaKey, treeNodeId = Model.TreeNodeId })">Default Language</a>
        @foreach (string lang in Model.CmsConfiguration?.Languages ?? Enumerable.Empty<string>())
        {
            <a class="badge badge-secondary" href="@Url.Action("Edit", "Edit", new { lang = @lang, id = Model.Id, cmsType = Model.CmsType, treeItemSchemaKey = Model.TreeItemSchemaKey, treeNodeId = Model.TreeNodeId })">@lang</a>
        }
    }
    <br />
    <br />

    @foreach(var node in Model.Nodes)
    {
        <p>slug: @node.Name</p>
    }

    <button onclick="javascript:load()" class="btn btn-warning">Reload data</button>
    <button id="saveButton" onclick="javascript:save()" class="btn btn-primary">Save</button>

    <div id='editor_holder'></div>

</div>
