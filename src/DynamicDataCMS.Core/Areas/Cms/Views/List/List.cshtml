@inject DynamicDataCMS.Storage.Interfaces.IReadCmsItem readCmsItem;
@model ListViewModel

@{
    if (Model == null)
    {
        return;
    }
    ViewData["Title"] = Model.MenuCmsItem.Name + " Overview";

    string searchQuery = ViewBag.SearchQuery;

    int TotalPages = (int)Math.Ceiling(decimal.Divide(Model.TotalPages, Model.PageSize));
    bool EnablePrevious = Model.CurrentPage > 1;
    bool EnableNext = Model.CurrentPage < TotalPages;
    string sortOrder = ViewBag.SortOrder;
    string sortField = ViewBag.SortField;

    string GetSortOrder(string field)
    {
        if (ViewBag.SortField == field)
        {
            if (ViewBag.SortOrder == "Asc")
                return "Desc";
        }

        return "Asc";
    }
}

<h1>@Model.MenuCmsItem.Name Overview</h1>





<div class="row">
    <div class="col-sm">
        <p>
            @Html.ActionLink("Create New " + @Model.MenuCmsItem.Name, "Create", "Edit", new { Area = "Cms", cmstype = Model.CmsType }, new { @class = "btn btn-primary", role = "button" })
        </p>
    </div>
    <div class="col-sm">
    </div>
    <div class="col-sm">
        <!-- Search form -->
        <form class="form-inline d-flex justify-content-center md-form form-sm" id="searchForm">
            <input class="form-control form-control-sm mr-3 w-75" name="q" type="text" placeholder="Search"
                    aria-label="Search" value="@searchQuery">
            <i class="fas fa-search" aria-hidden="true" onclick="document.getElementById('searchForm').submit();"></i>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            @if (!Model.MenuCmsItem.ListViewProperties.Any())
            {
                <th>
                    Id
                </th>
                <th>
                    Modified By
                </th>
            }
            @foreach (var column in Model.MenuCmsItem.ListViewProperties)
            {
                @if (readCmsItem.CanSort(Model.CmsType))
                {
                    <th>@Html.ActionLink(column.DisplayName, "List", "List", new { Area = "Cms", sortField = column.Key, sortOrder = GetSortOrder(column.Key) })</th>
                }
                else
                {
                    <th>@column.DisplayName</th>
                }
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                @if (!Model.MenuCmsItem.ListViewProperties.Any())
                {
                    <td>
                        @item.Id
                    </td>
                    <td>
                        @item.LastModifiedBy
                    </td>
                }
                @foreach (var column in Model.MenuCmsItem.ListViewProperties)
                {
                    <td>@item.AdditionalProperties.FirstOrDefault(x => x.Key == column.Key).Value</td>
                }
                <td>
                    @Html.ActionLink("Edit", "Edit", "Edit", new { Area = "Cms", id = item.Id, cmstype = item.CmsType }) |
                    @Html.ActionLink("Delete", "Delete", "Delete", new { Area = "Cms", id = item.Id, cmstype = item.CmsType })
                </td>
            </tr>
        }
    </tbody>
</table>

@if (TotalPages > 1)
{

    <nav aria-label="Page navigation">
        <ul class="pagination flex-wrap">
            <li class="page-item @(EnablePrevious ? " " : " disabled" )">
                <a asp-route-pageIndex="0" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
                   class="page-link" aria-label="Frist">
                    <span aria-hidden="true">|&lt;</span>
                    <span class="sr-only">First</span>
                </a>
            </li>
            <li class="page-item @(EnablePrevious ? " " : " disabled" )">
                <a asp-route-pageIndex="@(Model.CurrentPage -2)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
                   class="page-link" aria-label="Next">
                    <span aria-hidden="true">&lt;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
            @for (var i = 1; i <= TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? " active" : "" )">
                    <a asp-route-pageIndex="@(i-1)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField" class="page-link">@i</a>
                </li>
            }
            <li class="page-item @(EnableNext ? " " : " disabled" )">
                <a asp-route-pageIndex="@(Model.CurrentPage)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
                   class="page-link" aria-label="Previous">
                    <span aria-hidden="true">&gt;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            <li class="page-item @(EnableNext ? " " : " disabled" )">
                <a asp-route-pageIndex="@(TotalPages-1)" asp-route-sortOrder="@sortOrder" asp-route-sortField="@sortField"
                   class="page-link" aria-label="Last">
                    <span aria-hidden="true">&gt;|</span>
                    <span class="sr-only">Last</span>
                </a>
            </li>
        </ul>
    </nav>
}
